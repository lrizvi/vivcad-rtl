[tool.poetry]
name = "rtl"
version = "0.0.0"
description = ""
authors = ["Lilly Rizvi <rizvi.l@northeastern.edu>"]
# license = "MIT"
# readme = "README.md"
packages = [
    {include = "rtl"}
]

[tool.poetry.dependencies]
python          = "^3.10"
sorcery         = "^0.2.2"
numpy           = "^1.26.3"
scipy           = "^1.12.0"
matplotlib      = "^3.8.2"
amaranth        = "^0.4.1"
amaranth-boards = {git = "https://github.com/amaranth-lang/amaranth-boards.git"}

[tool.poetry.group.dev.dependencies]
tox = "^4.12.1"
pytest-sugar = "^0.9.7"
cocotb-test  = "^0.2.4"
pytest-cov   = "^4.1.0"
pytest-mypy  = "^0.10.3"
pytest-ruff  = "^0.2.1"
ruff         = "==0.1.12" # 2024-01-30: latest package breaks nix flake

[tool.tox]
legacy_tox_ini = """
[tox]
    minversion = 4.12.1
    env_list =
        py311
        type
        lint
        coverage
        build

    [testenv]
    description = run unit tests
    skip_install = true
    allowlist_externals = poetry
    commands =  poetry run pytest {posargs:rtl}

    [testenv:type]
    description = run type checks
    skip_install = true
    allowlist_externals = poetry
    commands = poetry run pytest --mypy {posargs:rtl}

    [testenv:lint]
    description = run linter
    skip_install = true
    allowlist_externals = poetry 
    commands = poetry run pytest --ruff {posargs:rtl}

    [testenv:coverage]  
    description = run coverage report
    skip_install = true
    allowlist_externals = poetry
    commands = poetry run pytest --cov {posargs:rtl} {posargs:rtl}

    [testenv:build]
    description = run pyproject build
    skip_install = true
    allowlist_externals = poetry
    commands = poetry build
"""

[tool.poetry.build]
script = "build.py"
generate-setup-file = true

[build-system]
requires = [
    "poetry-core",
    "setuptools",
    "wheel",
    "sorcery    >= 0.2.2",
    "numpy      >=1.26.3",
    "scipy      >= 1.12.0",
    "matplotlib >= 3.8.2",
    "amaranth   >= 0.4.1",
    "amaranth-boards @ git+https://github.com/amaranth-lang/amaranth-boards.git",
]
build-backend = "poetry.core.masonry.api"
